<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Global variables
globalvar facingx;
globalvar facingy;
globalvar facingz;
globalvar dir;
globalvar landed;
globalvar avoiding;
globalvar hit;
globalvar webHeight;
globalvar webRecovery;
globalvar webTimer;
globalvar webEntityCounter;
globalvar scale;
globalvar waspCounter;
globalvar waspLimit;
globalvar waspSwitch;
globalvar killer;
globalvar outlinePosition;
globalvar outlineLimit;
globalvar volume;
globalvar music;
globalvar musicMoment;
globalvar pauseState;
globalvar previousroom;
globalvar saveMessage0;
globalvar saveMessage1;
globalvar saveMessage2;
globalvar saveMessage3;
globalvar saveMessage4;
globalvar load;
globalvar difficulty;
globalvar time;
globalvar score0;
globalvar score1;
globalvar score2;
globalvar score3;
globalvar score4;
//Initialisation
ini_open("save.ini");
load=ini_read_real("Global Save","Load",-1);
ini_open("temp0.ini");
previousroom=ini_read_real("Save","Previous Room",0);
ini_close();
ini_open("temp1.ini");
pauseState=ini_read_real("Save","Pause State",false);
ini_close();
if load == -1
{
    ini_open("temp1.ini");
    if room == rm_main
    {
        if random_get_seed() == 0
            randomize();
        else
            random_set_seed(ini_read_real("Save","Seed",random_get_seed())); 
        if previousroom == rm_tutorial
        {     
            musicMoment=ini_read_real("Save","Music Moment",0);
            music=audio_play_sound(snd_music,0,true);
            audio_sound_set_track_position(music,musicMoment);
        }
        difficulty=ini_read_real("Save","Difficulty",0);
        if difficulty == 0
        {
            lives=ini_read_real("Save","Lives",10);
            waspLimit=ini_read_real("Save","Wasp Limit",5);
            webRecovery=ini_read_real("Save","Web Recovery",0.2);
        }
        else if difficulty == 1
        {
            lives=ini_read_real("Save","Lives",7);
            waspLimit=ini_read_real("Save","Wasp Limit",7);
            webRecovery=ini_read_real("Save","Web Recovery",0.15);
        }
        else if difficulty == 2
        {
            lives=ini_read_real("Save","Lives",5);
            waspLimit=ini_read_real("Save","Wasp Limit",10);
            webRecovery=ini_read_real("Save","Web Recovery",0.1);
        }
        else if difficulty == 3
        {
            lives=ini_read_real("Save","Lives",3);
            waspLimit=ini_read_real("Save","Wasp Limit",15);
            webRecovery=ini_read_real("Save","Web Recovery",0.05);
        }
        else if difficulty == 4
        {
            lives=ini_read_real("Save","Lives",1);
            waspLimit=ini_read_real("Save","Wasp Limit",20);
            webRecovery=ini_read_real("Save","Web Recovery",0.01);
        }
        time=ini_read_real("Save","Time",0);         
        webTimer=ini_read_real("Save","Web Timer",0); 
        dir=ini_read_real("Save","Dir",0);
        with(obj_spider)instance_destroy();
        instance_create(x,y,ini_read_real("Save","Spider Index",obj_spider_idle));
        obj_spider.x=ini_read_real("Save","Spider x",1600);
        obj_spider.y=ini_read_real("Save","Spider y",2200);
        facingx=ini_read_real("Save","Facingx",-1);
        facingy=ini_read_real("Save","Facingy",1);
        facingz=ini_read_real("Save","Facingz",0);        
        obj_spider.image_speed=ini_read_real("Save","Spider Image Speed",1);
        obj_spider.image_index=ini_read_real("Save","Spider Image Index",0);
        landed=ini_read_real("Save","Landed",0);
        waspCounter=ini_read_real("Save","Wasp Counter",0);        
        waspSwitch=ini_read_real("Save","Wasp Switch",1);
        avoiding=ini_read_real("Save","Avoiding",0);
        hit=ini_read_real("Save","Hit",0);
        webHeight=ini_read_real("Save","Web Height",1);
        webEntityCounter=ini_read_real("Save","Web Entity Counter",0);
        scale=ini_read_real("Save","Scale",0.25);        
        view_xview[0]=ini_read_real("Save","View x",800);
        view_yview[0]=ini_read_real("Save","View y",1440);
        with(obj_spiderWasp)instance_destroy();
        for(var i=0;i&lt;waspCounter;i++)
        {
            var spiderWaspIndex=instance_create(x,y,ini_read_real("Save","Spider Wasp "+string(i)+" Index",0));
            spiderWaspIndex.x=ini_read_real("Save","Spider Wasp "+string(i)+" x",obj_spiderWaspNest.x);
            spiderWaspIndex.y=ini_read_real("Save","Spider Wasp "+string(i)+" y",obj_spiderWaspNest.y);
            spiderWaspIndex.image_speed=ini_read_real("Save","Spider Wasp "+string(i)+" Image Speed",1);
            spiderWaspIndex.image_index=ini_read_real("Save","Spider Wasp "+string(i)+" Image Index",0);
            spiderWaspIndex.speed=ini_read_real("Save","Spider Wasp "+string(i)+" Speed",7);
            spiderWaspIndex.direction=ini_read_real("Save","Spider Wasp "+string(i)+" Direction",270);
        }
        if lives == 0
            killer=instance_nearest(obj_spider.x,obj_spider.y,obj_spiderWasp);
        else
            killer=ini_read_real("Save","Killer",0);
        with(obj_webEntity)instance_destroy();
        for(var i=0;i&lt;webEntityCounter;i++)
        {
            var webEntityIndex=instance_create(x,y,ini_read_real("Save","Web Entity "+string(i)+" Index",0));
            webEntityIndex.x=ini_read_real("Save","Web Entity "+string(i)+" x",obj_spiderWaspNest.x);
            webEntityIndex.y=ini_read_real("Save","Web Entity "+string(i)+" y",obj_spiderWaspNest.y);
            webEntityIndex.speed=ini_read_real("Save","Web Entity "+string(i)+" Speed",0);
            webEntityIndex.direction=ini_read_real("Save","Web Entity "+string(i)+" Direction",0);
        }
    }
    ini_close();
}
else if load == 0
{
    ini_open("save.ini");
    if room == rm_main
    {
        random_set_seed(ini_read_real("Save0","Seed",random_get_seed()));
        musicMoment=ini_read_real("Save0","Music Moment",0);
        music=audio_play_sound(snd_music,0,true);
        audio_sound_set_track_position(music,musicMoment);
        difficulty=ini_read_real("Save0","Difficulty",0);
        if difficulty == 0
        {
            lives=ini_read_real("Save0","Lives",10);
            waspLimit=ini_read_real("Save0","Wasp Limit",5);
            webRecovery=ini_read_real("Save0","Web Recovery",0.2);
        }
        else if difficulty == 1
        {
            lives=ini_read_real("Save0","Lives",7);
            waspLimit=ini_read_real("Save0","Wasp Limit",7);
            webRecovery=ini_read_real("Save0","Web Recovery",0.15);
        }
        else if difficulty == 2
        {
            lives=ini_read_real("Save0","Lives",5);
            waspLimit=ini_read_real("Save0","Wasp Limit",10);
            webRecovery=ini_read_real("Save0","Web Recovery",0.1);
        }
        else if difficulty == 3
        {
            lives=ini_read_real("Save0","Lives",3);
            waspLimit=ini_read_real("Save0","Wasp Limit",15);
            webRecovery=ini_read_real("Save0","Web Recovery",0.05);
        }
        else if difficulty == 4
        {
            lives=ini_read_real("Save0","Lives",1);
            waspLimit=ini_read_real("Save0","Wasp Limit",20);
            webRecovery=ini_read_real("Save0","Web Recovery",0.01);
        }
        time=ini_read_real("Save0","Time",0); 
        dir=ini_read_real("Save0","Dir",0);
        with(obj_spider)instance_destroy();
        instance_create(x,y,ini_read_real("Save0","Spider Index",obj_spider_idle));
        obj_spider.x=ini_read_real("Save0","Spider x",1600);
        obj_spider.y=ini_read_real("Save0","Spider y",2200);
        facingx=ini_read_real("Save0","Facingx",-1);
        facingy=ini_read_real("Save0","Facingy",1);
        facingz=ini_read_real("Save0","Facingz",0);
        obj_spider.image_speed=ini_read_real("Save0","Spider Image Speed",1);
        obj_spider.image_index=ini_read_real("Save0","Spider Image Index",0);
        landed=ini_read_real("Save0","Landed",0);
        waspCounter=ini_read_real("Save0","Wasp Counter",0);
        waspSwitch=ini_read_real("Save0","Wasp Switch",1);
        avoiding=ini_read_real("Save0","Avoiding",0);
        hit=ini_read_real("Save0","Hit",0);
        webTimer=ini_read_real("Save0","Web Timer",0);
        webHeight=ini_read_real("Save0","Web Height",1);
        webEntityCounter=ini_read_real("Save0","Web Entity Counter",0);
        scale=ini_read_real("Save0","Scale",0.25);
        view_xview[0]=ini_read_real("Save0","View x",800);
        view_yview[0]=ini_read_real("Save0","View y",1440);
        with(obj_spiderWasp)instance_destroy();
        for(var i=0;i&lt;waspCounter;i++)
        {
            var spiderWaspIndex=instance_create(x,y,ini_read_real("Save0","Spider Wasp "+string(i)+" Index",0));
            spiderWaspIndex.x=ini_read_real("Save0","Spider Wasp "+string(i)+" x",obj_spiderWaspNest.x);
            spiderWaspIndex.y=ini_read_real("Save0","Spider Wasp "+string(i)+" y",obj_spiderWaspNest.y);
            spiderWaspIndex.image_speed=ini_read_real("Save0","Spider Wasp "+string(i)+" Image Speed",1);
            spiderWaspIndex.image_index=ini_read_real("Save0","Spider Wasp "+string(i)+" Image Index",0);
            spiderWaspIndex.speed=ini_read_real("Save0","Spider Wasp "+string(i)+" Speed",7);
            spiderWaspIndex.direction=ini_read_real("Save0","Spider Wasp "+string(i)+" Direction",270);
        }
        killer=ini_read_real("Save0","Killer",0);
        with(obj_webEntity)instance_destroy();
        for(var i=0;i&lt;webEntityCounter;i++)
        {
            var webEntityIndex=instance_create(x,y,ini_read_real("Save0","Web Entity "+string(i)+" Index",0));
            webEntityIndex.x=ini_read_real("Save0","Web Entity "+string(i)+" x",obj_spiderWaspNest.x);
            webEntityIndex.y=ini_read_real("Save0","Web Entity "+string(i)+" y",obj_spiderWaspNest.y);
            webEntityIndex.speed=ini_read_real("Save0","Web Entity "+string(i)+" Speed",0);
            webEntityIndex.direction=ini_read_real("Save0","Web Entity "+string(i)+" Direction",0);
        }
        ini_write_real("Global Save","Load",-1);
    }
    ini_close();
}
else if load == 1
{
    ini_open("save.ini");
    if room == rm_main
    {
        random_set_seed(ini_read_real("Save1","Seed",random_get_seed()));
        musicMoment=ini_read_real("Save1","Music Moment",0);
        music=audio_play_sound(snd_music,0,true);
        audio_sound_set_track_position(music,musicMoment);
        difficulty=ini_read_real("Save1","Difficulty",0);
        if difficulty == 0
        {
            lives=ini_read_real("Save1","Lives",10);
            waspLimit=ini_read_real("Save1","Wasp Limit",5);
            webRecovery=ini_read_real("Save1","Web Recovery",0.2);
        }
        else if difficulty == 1
        {
            lives=ini_read_real("Save1","Lives",7);
            waspLimit=ini_read_real("Save1","Wasp Limit",7);
            webRecovery=ini_read_real("Save1","Web Recovery",0.15);
        }
        else if difficulty == 2
        {
            lives=ini_read_real("Save1","Lives",5);
            waspLimit=ini_read_real("Save1","Wasp Limit",10);
            webRecovery=ini_read_real("Save1","Web Recovery",0.1);
        }
        else if difficulty == 3
        {
            lives=ini_read_real("Save1","Lives",3);
            waspLimit=ini_read_real("Save1","Wasp Limit",15);
            webRecovery=ini_read_real("Save1","Web Recovery",0.05);
        }
        else if difficulty == 4
        {
            lives=ini_read_real("Save1","Lives",1);
            waspLimit=ini_read_real("Save1","Wasp Limit",20);
            webRecovery=ini_read_real("Save1","Web Recovery",0.01);
        }
        time=ini_read_real("Save1","Time",0); 
        dir=ini_read_real("Save1","Dir",0);
        with(obj_spider)instance_destroy();
        instance_create(x,y,ini_read_real("Save1","Spider Index",obj_spider_idle));
        obj_spider.x=ini_read_real("Save1","Spider x",1600);
        obj_spider.y=ini_read_real("Save1","Spider y",2200);
        facingx=ini_read_real("Save1","Facingx",-1);
        facingy=ini_read_real("Save1","Facingy",1);
        facingz=ini_read_real("Save1","Facingz",0);
        obj_spider.image_speed=ini_read_real("Save1","Spider Image Speed",1);
        obj_spider.image_index=ini_read_real("Save1","Spider Image Index",0);
        landed=ini_read_real("Save1","Landed",0);
        waspCounter=ini_read_real("Save1","Wasp Counter",0);
        waspSwitch=ini_read_real("Save1","Wasp Switch",1);
        avoiding=ini_read_real("Save1","Avoiding",0);
        hit=ini_read_real("Save1","Hit",0);
        webTimer=ini_read_real("Save1","Web Timer",0);
        webHeight=ini_read_real("Save1","Web Height",1);
        webEntityCounter=ini_read_real("Save0","Web Entity Counter",0);
        scale=ini_read_real("Save1","Scale",0.25);
        view_xview[0]=ini_read_real("Save1","View x",800);
        view_yview[0]=ini_read_real("Save1","View y",1440);
        with(obj_spiderWasp)instance_destroy();
        for(var i=0;i&lt;waspCounter;i++)
        {
            var spiderWaspIndex=instance_create(x,y,ini_read_real("Save1","Spider Wasp "+string(i)+" Index",0));
            spiderWaspIndex.x=ini_read_real("Save1","Spider Wasp "+string(i)+" x",obj_spiderWaspNest.x);
            spiderWaspIndex.y=ini_read_real("Save1","Spider Wasp "+string(i)+" y",obj_spiderWaspNest.y);
            spiderWaspIndex.image_speed=ini_read_real("Save1","Spider Wasp "+string(i)+" Image Speed",1);
            spiderWaspIndex.image_index=ini_read_real("Save1","Spider Wasp "+string(i)+" Image Index",0);
            spiderWaspIndex.speed=ini_read_real("Save1","Spider Wasp "+string(i)+" Speed",7);
            spiderWaspIndex.direction=ini_read_real("Save1","Spider Wasp "+string(i)+" Direction",270);
        }
        killer=ini_read_real("Save0","Killer",0);
        with(obj_webEntity)instance_destroy();
        for(var i=0;i&lt;webEntityCounter;i++)
        {
            var webEntityIndex=instance_create(x,y,ini_read_real("Save1","Web Entity "+string(i)+" Index",0));
            webEntityIndex.x=ini_read_real("Save1","Web Entity "+string(i)+" x",obj_spiderWaspNest.x);
            webEntityIndex.y=ini_read_real("Save1","Web Entity "+string(i)+" y",obj_spiderWaspNest.y);
            webEntityIndex.speed=ini_read_real("Save1","Web Entity "+string(i)+" Speed",0);
            webEntityIndex.direction=ini_read_real("Save1","Web Entity "+string(i)+" Direction",0);
        }
        ini_write_real("Global Save","Load",-1);
    }
    ini_close();
}
else if load == 2
{
    ini_open("save.ini");
    if room == rm_main
    {
        random_set_seed(ini_read_real("Save2","Seed",random_get_seed()));
        musicMoment=ini_read_real("Save2","Music Moment",0);
        music=audio_play_sound(snd_music,0,true);
        audio_sound_set_track_position(music,musicMoment);
        difficulty=ini_read_real("Save2","Difficulty",0);
        if difficulty == 0
        {
            lives=ini_read_real("Save2","Lives",10);
            waspLimit=ini_read_real("Save2","Wasp Limit",5);
            webRecovery=ini_read_real("Save2","Web Recovery",0.2);
        }
        else if difficulty == 1
        {
            lives=ini_read_real("Save2","Lives",7);
            waspLimit=ini_read_real("Save2","Wasp Limit",7);
            webRecovery=ini_read_real("Save2","Web Recovery",0.15);
        }
        else if difficulty == 2
        {
            lives=ini_read_real("Save2","Lives",5);
            waspLimit=ini_read_real("Save2","Wasp Limit",10);
            webRecovery=ini_read_real("Save2","Web Recovery",0.1);
        }
        else if difficulty == 3
        {
            lives=ini_read_real("Save2","Lives",3);
            waspLimit=ini_read_real("Save2","Wasp Limit",15);
            webRecovery=ini_read_real("Save2","Web Recovery",0.05);
        }
        else if difficulty == 4
        {
            lives=ini_read_real("Save2","Lives",1);
            waspLimit=ini_read_real("Save2","Wasp Limit",20);
            webRecovery=ini_read_real("Save2","Web Recovery",0.01);
        }
        time=ini_read_real("Save2","Time",0); 
        dir=ini_read_real("Save2","Dir",0);
        with(obj_spider)instance_destroy();
        instance_create(x,y,ini_read_real("Save2","Spider Index",obj_spider_idle));
        obj_spider.x=ini_read_real("Save2","Spider x",1600);
        obj_spider.y=ini_read_real("Save2","Spider y",2200);
        facingx=ini_read_real("Save2","Facingx",-1);
        facingy=ini_read_real("Save2","Facingy",1);
        facingz=ini_read_real("Save2","Facingz",0);
        obj_spider.image_speed=ini_read_real("Save2","Spider Image Speed",1);
        obj_spider.image_index=ini_read_real("Save2","Spider Image Index",0);
        landed=ini_read_real("Save2","Landed",0);
        waspCounter=ini_read_real("Save2","Wasp Counter",0);
        waspSwitch=ini_read_real("Save2","Wasp Switch",1);
        avoiding=ini_read_real("Save2","Avoiding",0);
        hit=ini_read_real("Save2","Hit",0);
        webTimer=ini_read_real("Save2","Web Timer",0);
        webHeight=ini_read_real("Save2","Web Height",1);
        webEntityCounter=ini_read_real("Save2","Web Entity Counter",0);
        scale=ini_read_real("Save2","Scale",0.25);
        view_xview[0]=ini_read_real("Save2","View x",800);
        view_yview[0]=ini_read_real("Save2","View y",1440);
        with(obj_spiderWasp)instance_destroy();
        for(var i=0;i&lt;waspCounter;i++)
        {
            var spiderWaspIndex=instance_create(x,y,ini_read_real("Save2","Spider Wasp "+string(i)+" Index",0));
            spiderWaspIndex.x=ini_read_real("Save2","Spider Wasp "+string(i)+" x",obj_spiderWaspNest.x);
            spiderWaspIndex.y=ini_read_real("Save2","Spider Wasp "+string(i)+" y",obj_spiderWaspNest.y);
            spiderWaspIndex.image_speed=ini_read_real("Save2","Spider Wasp "+string(i)+" Image Speed",1);
            spiderWaspIndex.image_index=ini_read_real("Save2","Spider Wasp "+string(i)+" Image Index",0);
            spiderWaspIndex.speed=ini_read_real("Save2","Spider Wasp "+string(i)+" Speed",7);
            spiderWaspIndex.direction=ini_read_real("Save2","Spider Wasp "+string(i)+" Direction",270);
        }
        killer=ini_read_real("Save2","Killer",0);
        with(obj_webEntity)instance_destroy();
        for(var i=0;i&lt;webEntityCounter;i++)
        {
            var webEntityIndex=instance_create(x,y,ini_read_real("Save2","Web Entity "+string(i)+" Index",0));
            webEntityIndex.x=ini_read_real("Save2","Web Entity "+string(i)+" x",obj_spiderWaspNest.x);
            webEntityIndex.y=ini_read_real("Save2","Web Entity "+string(i)+" y",obj_spiderWaspNest.y);
            webEntityIndex.speed=ini_read_real("Save2","Web Entity "+string(i)+" Speed",0);
            webEntityIndex.direction=ini_read_real("Save2","Web Entity "+string(i)+" Direction",0);
        }
        ini_write_real("Global Save","Load",-1);
    }
    ini_close();
}
else if load == 3
{
    ini_open("save.ini");
    if room == rm_main
    {
        random_set_seed(ini_read_real("Save3","Seed",random_get_seed()));
        musicMoment=ini_read_real("Save3","Music Moment",0);
        music=audio_play_sound(snd_music,0,true);
        audio_sound_set_track_position(music,musicMoment);
        difficulty=ini_read_real("Save3","Difficulty",0);
        if difficulty == 0
        {
            lives=ini_read_real("Save3","Lives",10);
            waspLimit=ini_read_real("Save3","Wasp Limit",5);
            webRecovery=ini_read_real("Save3","Web Recovery",0.2);
        }
        else if difficulty == 1
        {
            lives=ini_read_real("Save3","Lives",7);
            waspLimit=ini_read_real("Save3","Wasp Limit",7);
            webRecovery=ini_read_real("Save3","Web Recovery",0.15);
        }
        else if difficulty == 2
        {
            lives=ini_read_real("Save3","Lives",5);
            waspLimit=ini_read_real("Save3","Wasp Limit",10);
            webRecovery=ini_read_real("Save3","Web Recovery",0.1);
        }
        else if difficulty == 3
        {
            lives=ini_read_real("Save3","Lives",3);
            waspLimit=ini_read_real("Save3","Wasp Limit",15);
            webRecovery=ini_read_real("Save3","Web Recovery",0.05);
        }
        else if difficulty == 4
        {
            lives=ini_read_real("Save3","Lives",1);
            waspLimit=ini_read_real("Save3","Wasp Limit",20);
            webRecovery=ini_read_real("Save3","Web Recovery",0.01);
        }
        time=ini_read_real("Save3","Time",0); 
        dir=ini_read_real("Save3","Dir",0);
        with(obj_spider)instance_destroy();
        instance_create(x,y,ini_read_real("Save3","Spider Index",obj_spider_idle));
        obj_spider.x=ini_read_real("Save3","Spider x",1600);
        obj_spider.y=ini_read_real("Save3","Spider y",2200);
        facingx=ini_read_real("Save3","Facingx",-1);
        facingy=ini_read_real("Save3","Facingy",1);
        facingz=ini_read_real("Save3","Facingz",0);
        obj_spider.image_speed=ini_read_real("Save3","Spider Image Speed",1);
        obj_spider.image_index=ini_read_real("Save3","Spider Image Index",0);
        landed=ini_read_real("Save3","Landed",0);
        waspCounter=ini_read_real("Save3","Wasp Counter",0);
        waspSwitch=ini_read_real("Save3","Wasp Switch",1);
        avoiding=ini_read_real("Save3","Avoiding",0);
        hit=ini_read_real("Save3","Hit",0);
        webTimer=ini_read_real("Save3","Web Timer",0);
        webHeight=ini_read_real("Save3","Web Height",1);
        webEntityCounter=ini_read_real("Save3","Web Entity Counter",0);
        scale=ini_read_real("Save3","Scale",0.25);
        view_xview[0]=ini_read_real("Save3","View x",800);
        view_yview[0]=ini_read_real("Save3","View y",1440);
        with(obj_spiderWasp)instance_destroy();
        for(var i=0;i&lt;waspCounter;i++)
        {
            var spiderWaspIndex=instance_create(x,y,ini_read_real("Save3","Spider Wasp "+string(i)+" Index",0));
            spiderWaspIndex.x=ini_read_real("Save3","Spider Wasp "+string(i)+" x",obj_spiderWaspNest.x);
            spiderWaspIndex.y=ini_read_real("Save3","Spider Wasp "+string(i)+" y",obj_spiderWaspNest.y);
            spiderWaspIndex.image_speed=ini_read_real("Save3","Spider Wasp "+string(i)+" Image Speed",1);
            spiderWaspIndex.image_index=ini_read_real("Save3","Spider Wasp "+string(i)+" Image Index",0);
            spiderWaspIndex.speed=ini_read_real("Save3","Spider Wasp "+string(i)+" Speed",7);
            spiderWaspIndex.direction=ini_read_real("Save3","Spider Wasp "+string(i)+" Direction",270);
        }
        killer=ini_read_real("Save3","Killer",0);
        with(obj_webEntity)instance_destroy();
        for(var i=0;i&lt;webEntityCounter;i++)
        {
            var webEntityIndex=instance_create(x,y,ini_read_real("Save3","Web Entity "+string(i)+" Index",0));
            webEntityIndex.x=ini_read_real("Save3","Web Entity "+string(i)+" x",obj_spiderWaspNest.x);
            webEntityIndex.y=ini_read_real("Save3","Web Entity "+string(i)+" y",obj_spiderWaspNest.y);
            webEntityIndex.speed=ini_read_real("Save3","Web Entity "+string(i)+" Speed",0);
            webEntityIndex.direction=ini_read_real("Save3","Web Entity "+string(i)+" Direction",0);
        }
        ini_write_real("Global Save","Load",-1);
    }
    ini_close();
}
else if load == 4
{
    ini_open("save.ini");
    if room == rm_main
    {
        random_set_seed(ini_read_real("Save4","Seed",random_get_seed()));
        musicMoment=ini_read_real("Save4","Music Moment",0);
        music=audio_play_sound(snd_music,0,true);
        audio_sound_set_track_position(music,musicMoment);
        difficulty=ini_read_real("Save4","Difficulty",0);
        if difficulty == 0
        {
            lives=ini_read_real("Save4","Lives",10);
            waspLimit=ini_read_real("Save4","Wasp Limit",5);
            webRecovery=ini_read_real("Save4","Web Recovery",0.2);
        }
        else if difficulty == 1
        {
            lives=ini_read_real("Save4","Lives",7);
            waspLimit=ini_read_real("Save4","Wasp Limit",7);
            webRecovery=ini_read_real("Save4","Web Recovery",0.15);
        }
        else if difficulty == 2
        {
            lives=ini_read_real("Save4","Lives",5);
            waspLimit=ini_read_real("Save4","Wasp Limit",10);
            webRecovery=ini_read_real("Save4","Web Recovery",0.1);
        }
        else if difficulty == 3
        {
            lives=ini_read_real("Save4","Lives",3);
            waspLimit=ini_read_real("Save4","Wasp Limit",15);
            webRecovery=ini_read_real("Save4","Web Recovery",0.05);
        }
        else if difficulty == 4
        {
            lives=ini_read_real("Save4","Lives",1);
            waspLimit=ini_read_real("Save4","Wasp Limit",20);
            webRecovery=ini_read_real("Save4","Web Recovery",0.01);
        }
        time=ini_read_real("Save4","Time",0); 
        dir=ini_read_real("Save4","Dir",0);
        with(obj_spider)instance_destroy();
        instance_create(x,y,ini_read_real("Save4","Spider Index",obj_spider_idle));
        obj_spider.x=ini_read_real("Save4","Spider x",1600);
        obj_spider.y=ini_read_real("Save4","Spider y",2200);
        facingx=ini_read_real("Save4","Facingx",-1);
        facingy=ini_read_real("Save4","Facingy",1);
        facingz=ini_read_real("Save4","Facingz",0);
        obj_spider.image_speed=ini_read_real("Save4","Spider Image Speed",1);
        obj_spider.image_index=ini_read_real("Save4","Spider Image Index",0);
        landed=ini_read_real("Save4","Landed",0);
        waspCounter=ini_read_real("Save4","Wasp Counter",0);
        waspSwitch=ini_read_real("Save4","Wasp Switch",1);
        avoiding=ini_read_real("Save4","Avoiding",0);
        hit=ini_read_real("Save4","Hit",0);
        webTimer=ini_read_real("Save4","Web Timer",0);
        webHeight=ini_read_real("Save4","Web Height",1);
        webEntityCounter=ini_read_real("Save4","Web Entity Counter",0);
        scale=ini_read_real("Save4","Scale",0.25);
        view_xview[0]=ini_read_real("Save4","View x",800);
        view_yview[0]=ini_read_real("Save4","View y",1440);
        with(obj_spiderWasp)instance_destroy();
        for(var i=0;i&lt;waspCounter;i++)
        {
            var spiderWaspIndex=instance_create(x,y,ini_read_real("Save4","Spider Wasp "+string(i)+" Index",0));
            spiderWaspIndex.x=ini_read_real("Save4","Spider Wasp "+string(i)+" x",obj_spiderWaspNest.x);
            spiderWaspIndex.y=ini_read_real("Save4","Spider Wasp "+string(i)+" y",obj_spiderWaspNest.y);
            spiderWaspIndex.image_speed=ini_read_real("Save4","Spider Wasp "+string(i)+" Image Speed",1);
            spiderWaspIndex.image_index=ini_read_real("Save4","Spider Wasp "+string(i)+" Image Index",0);
            spiderWaspIndex.speed=ini_read_real("Save4","Spider Wasp "+string(i)+" Speed",7);
            spiderWaspIndex.direction=ini_read_real("Save4","Spider Wasp "+string(i)+" Direction",270);
        }
        killer=ini_read_real("Save4","Killer",0);
        with(obj_webEntity)instance_destroy();
        for(var i=0;i&lt;webEntityCounter;i++)
        {
            var webEntityIndex=instance_create(x,y,ini_read_real("Save4","Web Entity "+string(i)+" Index",0));
            webEntityIndex.x=ini_read_real("Save4","Web Entity "+string(i)+" x",obj_spiderWaspNest.x);
            webEntityIndex.y=ini_read_real("Save4","Web Entity "+string(i)+" y",obj_spiderWaspNest.y);
            webEntityIndex.speed=ini_read_real("Save4","Web Entity "+string(i)+" Speed",0);
            webEntityIndex.direction=ini_read_real("Save4","Web Entity "+string(i)+" Direction",0);
        }
        ini_write_real("Global Save","Load",-1);
    }
    ini_close();
}
ini_open("save.ini");
volume = ini_read_real("Global Save","Volume",1);
ini_close();
//Outline choosing
if room == rm_mainMenu
    outlineLimit = 3;
else if room == rm_chooseDifficulty
    outlineLimit = 5;
else if room == rm_tutorial
    outlineLimit = 1;
else if room == rm_load
    outlineLimit = 5;
else if room == rm_options
    outlineLimit = 2;
else if room == rm_save
    outlineLimit = 5;
else if room == rm_main
    outlineLimit = 3;
outlinePosition = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if pauseState &amp;&amp; room == rm_main
{
    background_visible[0] = false;
    tile_layer_hide(1000000);
    instance_deactivate_all(true);
    draw_text_transformed(view_wport[0]/4-40,view_hport[0]/8,"Caught in a Web",1,1,0);
    //Resume button
    if outlinePosition == 0
    {   
        if keyboard_check(vk_space) 
        {   
            draw_sprite_ext(spr_button,0,view_wport[0]/2-100,view_hport[0]/2-70,1,1,0,c_white,0.7);        
        }
        else if keyboard_check_released(vk_space)
        {
            background_visible[0] = true;
            tile_layer_show(1000000);
            pauseState=false;
            audio_resume_sound(snd_music);
            instance_activate_all();
        }
        else
            draw_sprite_ext(spr_button,0,view_wport[0]/2-100,view_hport[0]/2-70,1,1,0,c_white,1);    
        draw_roundrect_color(view_wport[0]/2-102,view_hport[0]/2-72,
        view_wport[0]/2+101,view_hport[0]/2-19,c_white,c_red,true); 
    }
    else 
    {
        draw_sprite_ext(spr_button,0,view_wport[0]/2-100,view_hport[0]/2-70,1,1,0,c_white,1);
    }
    draw_text_transformed_color(view_wport[0]/2-50,view_hport[0]/2-75,"Resume",0.34,0.34,0,c_white,c_white,c_white,c_white,1);
    //Save button
    if outlinePosition == 1
    {
        if keyboard_check(vk_space) 
        {   
            draw_sprite_ext(spr_button,0,view_wport[0]/2-100,view_hport[0]/2,1,1,0,c_white,0.7);
        }
        else if keyboard_check_released(vk_space)
        {
            room_goto(rm_save);
            ini_open("temp1.ini");
            ini_write_real("Save","Pause State",pauseState);            
            ini_close();            
            ini_open("temp0.ini");
            ini_write_real("Save","Previous Room",rm_main);
            ini_close();
        }
        else
            draw_sprite_ext(spr_button,0,view_wport[0]/2-100,view_hport[0]/2,1,1,0,c_white,1); 
        draw_roundrect_color(view_wport[0]/2-102,view_hport[0]/2-2,
        view_wport[0]/2+101,view_hport[0]/2+51,c_white,c_red,true);
    }
    else
    {
        draw_sprite_ext(spr_button,0,view_wport[0]/2-100,view_hport[0]/2,1,1,0,c_white,1); 
    }
    draw_text_transformed_color(view_wport[0]/2-30,view_hport[0]/2-5,"Save",0.34,0.34,0,c_white,c_white,c_white,c_white,1);   
    //Options button
    if outlinePosition == 2
    {
    
        if keyboard_check(vk_space)    
        {
            draw_sprite_ext(spr_button,0,view_wport[0]/2-100,room_height/2+70,1,1,0,c_white,0.7);
        }
        else if keyboard_check_released(vk_space)
        {            
            room_goto(rm_options);
            ini_open("temp1.ini");
            ini_write_real("Save","Pause State",pauseState);
            ini_close();
            ini_open("temp0.ini");
            ini_write_real("Save","Previous Room",rm_main);
            ini_close();
        }
        else
            draw_sprite_ext(spr_button,0,view_wport[0]/2-100,view_hport[0]/2+70,1,1,0,c_white,1); 
        draw_roundrect_color(view_wport[0]/2-102,view_hport[0]/2+68,
        view_wport[0]/2+101,view_hport[0]/2+121,c_white,c_red,true);
    }
    else
    {
        draw_sprite_ext(spr_button,0,view_wport[0]/2-100,view_hport[0]/2+70,1,1,0,c_white,1);
    }
    draw_text_transformed_color(view_wport[0]/2-60,view_hport[0]/2+65,"Options",0.34,0.34,0,c_white,c_white,c_white,c_white,1);
    //Back button
    if outlinePosition == 3
    {
        if keyboard_check(vk_space)
        {    
            draw_sprite_ext(spr_button,0,view_wport[0]/2-100,view_hport[0]/2+140,1,1,0,c_white,0.7);       
        }
        else if keyboard_check_released(vk_space)
        {
            room_goto(rm_mainMenu);
            ini_open("temp0.ini");
            ini_write_real("Save","Previous Room",rm_main);
            ini_close();
        }
        else
            draw_sprite_ext(spr_button,0,view_wport[0]/2-100,view_hport[0]/2+140,1,1,0,c_white,1); 
        draw_roundrect_color(view_wport[0]/2-102,view_hport[0]/2+138,
        view_wport[0]/2+101,view_hport[0]/2+191,c_white,c_red,true);
    }
    else
    {
        draw_sprite_ext(spr_button,0,view_wport[0]/2-100,view_hport[0]/2+140,1,1,0,c_white,1);
    }
    draw_text_transformed_color(view_wport[0]/2-33,view_hport[0]/2+135,"Back",0.34,0.34,0,c_white,c_white,c_white,c_white,1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>window_set_caption("Caught in a Web");
window_set_cursor(cr_none);
draw_set_font(fnt_blackWiddow);
ini_open("save.ini");
saveMessage0=ini_read_string("Global Save","Message 0","Empty slot");
saveMessage1=ini_read_string("Global Save","Message 1","Empty slot");
saveMessage2=ini_read_string("Global Save","Message 2","Empty slot");
saveMessage3=ini_read_string("Global Save","Message 3","Empty slot");
saveMessage4=ini_read_string("Global Save","Message 4","Empty slot");
ini_close();
ini_open("save.ini");
audio_sound_gain(snd_music,ini_read_real("Global Save","Volume",1),0);
ini_close();
//Button Selection
if (room != rm_tutorial &amp;&amp; keyboard_check_pressed(vk_up)) || (room == rm_tutorial &amp;&amp; keyboard_check_pressed(vk_right))
{
    if outlinePosition != 0
        outlinePosition--;
    else
        outlinePosition = outlineLimit;
}
if (room != rm_tutorial &amp;&amp; keyboard_check_pressed(vk_down)) || (room == rm_tutorial &amp;&amp; keyboard_check_pressed(vk_left))
{
    if outlinePosition != outlineLimit
        outlinePosition++;
    else
        outlinePosition = 0;
} 
if room == rm_main &amp;&amp; !pauseState &amp;&amp; (keyboard_check_pressed(vk_down) || !window_has_focus())
{
    
    pauseState=true;
    ini_open("temp1.ini");
    ini_write_real("Save","Seed",random_get_seed());
    musicMoment=audio_sound_get_track_position(music);
    ini_write_real("Save","Music Moment",musicMoment);
    ini_write_real("Save","Pause State",pauseState); 
    ini_write_real("Save","Difficulty",difficulty);
    ini_write_real("Save","Time",time);
    ini_write_real("Save","Web Recovery",webRecovery); 
    ini_write_real("Save","Web Timer",webTimer);    
    ini_write_real("Save","Spider Index",obj_spider.object_index);
    ini_write_real("Save","Spider x",obj_spider.x);
    ini_write_real("Save","Spider y",obj_spider.y);
    ini_write_real("Save","Facingx",facingx);
    ini_write_real("Save","Facingy",facingy);
    ini_write_real("Save","Facingz",facingz);
    ini_write_real("Save","Dir",dir);
    ini_write_real("Save","Spider Image Speed",obj_spider.image_speed);
    ini_write_real("Save","Spider Image Index",obj_spider.image_index);
    ini_write_real("Save","Landed",landed);
    ini_write_real("Save","Wasp Counter",waspCounter);
    ini_write_real("Save","Wasp Limit",waspLimit);
    ini_write_real("Save","Wasp Switch",waspSwitch);
    ini_write_real("Save","Avoiding",avoiding);
    ini_write_real("Save","Hit",hit);
    ini_write_real("Save","Web Height",webHeight);
    ini_write_real("Save","Web Entity Counter",webEntityCounter);
    ini_write_real("Save","Killer",killer);
    ini_write_real("Save","Scale",scale);  
    ini_write_real("Save","Lives",lives);
    ini_write_real("Save","View x",view_xview[0]);
    ini_write_real("Save","View y",view_yview[0]); 
    with(obj_spiderWasp)
    {
        var i=0;
        while ini_key_exists("Save","Spider Wasp "+string(i)+" id")
            i++;  
        ini_write_real("Save","Spider Wasp "+string(i)+" id",id);      
        ini_write_real("Save","Spider Wasp "+string(i)+" Index",object_index);        
        ini_write_real("Save","Spider Wasp "+string(i)+" x",x);
        ini_write_real("Save","Spider Wasp "+string(i)+" y",y);
        ini_write_real("Save","Spider Wasp "+string(i)+" Image Speed",image_speed);
        ini_write_real("Save","Spider Wasp "+string(i)+" Image Index",image_index);
        ini_write_real("Save","Spider Wasp "+string(i)+" Speed",speed);
        ini_write_real("Save","Spider Wasp "+string(i)+" Direction",direction);
            
    }
    var i=0;
    while ini_key_exists("Save","Spider Wasp "+string(i)+" id")
        i++;
    var j;
    for (j=i-waspCounter;j&lt;i;j++)
    {
        ini_write_real("Save","Spider Wasp "+string(j-i+waspCounter)+" id",ini_read_real("Save","Spider Wasp "+string(j)+" id",0)); 
        ini_write_real("Save","Spider Wasp "+string(j-i+waspCounter)+" Index",ini_read_real("Save","Spider Wasp "+string(j)+" Index",0));
        ini_write_real("Save","Spider Wasp "+string(j-i+waspCounter)+" x",ini_read_real("Save","Spider Wasp "+string(j)+" x",obj_spiderWaspNest.x));
        ini_write_real("Save","Spider Wasp "+string(j-i+waspCounter)+" y",ini_read_real("Save","Spider Wasp "+string(j)+" y",obj_spiderWaspNest.y));
        ini_write_real("Save","Spider Wasp "+string(j-i+waspCounter)+" Image Speed",ini_read_real("Save","Spider Wasp "+string(j)+" Image Speed",1));
        ini_write_real("Save","Spider Wasp "+string(j-i+waspCounter)+" Image Index",ini_read_real("Save","Spider Wasp "+string(j)+" Image Index",0));
        ini_write_real("Save","Spider Wasp "+string(j-i+waspCounter)+" Speed",ini_read_real("Save","Spider Wasp "+string(j)+" Speed",7));
        ini_write_real("Save","Spider Wasp "+string(j-i+waspCounter)+" Direction",ini_read_real("Save","Spider Wasp "+string(j)+" Direction",270));        
    }
    for (i=waspCounter;i&lt;j;i++)
    {
        ini_key_delete("Save","Spider Wasp "+string(i)+" id");
        ini_key_delete("Save","Spider Wasp "+string(i)+" Index");
        ini_key_delete("Save","Spider Wasp "+string(i)+" x");
        ini_key_delete("Save","Spider Wasp "+string(i)+" y");
        ini_key_delete("Save","Spider Wasp "+string(i)+" Image Speed");
        ini_key_delete("Save","Spider Wasp "+string(i)+" Image Index");
        ini_key_delete("Save","Spider Wasp "+string(i)+" Speed");
        ini_key_delete("Save","Spider Wasp "+string(i)+" Direction");
    }
    with(obj_webEntity)
    {
        var i=0;
        while ini_key_exists("Save","Web Entity "+string(i)+" id")
            i++; 
        ini_write_real("Save","Web Entity "+string(i)+" id",id); 
        ini_write_real("Save","Web Entity "+string(i)+" Index",object_index);
        ini_write_real("Save","Web Entity "+string(i)+" x",x);
        ini_write_real("Save","Web Entity "+string(i)+" y",y);
        ini_write_real("Save","Web Entity "+string(i)+" Speed",speed); 
        ini_write_real("Save","Web Entity "+string(i)+" Direction",direction);            
    }
    i=0;
    while ini_key_exists("Save","Web Entity "+string(i)+" id")
        i++;
    for (j=i-webEntityCounter;j&lt;i;j++)
    {
        ini_write_real("Save","Web Entity "+string(j-i+webEntityCounter)+" id",ini_read_real("Save","Web Entity "+string(j)+" id",0)); 
        ini_write_real("Save","Web Entity "+string(j-i+webEntityCounter)+" Index",ini_read_real("Save","Web Entity "+string(j)+" Index",0));
        ini_write_real("Save","Web Entity "+string(j-i+webEntityCounter)+" x",ini_read_real("Save","Web Entity "+string(j)+" x",obj_spiderWaspNest.x));
        ini_write_real("Save","Web Entity "+string(j-i+webEntityCounter)+" y",ini_read_real("Save","Web Entity "+string(j)+" y",obj_spiderWaspNest.y));
        ini_write_real("Save","Web Entity "+string(j-i+webEntityCounter)+" Speed",ini_read_real("Save","Web Entity "+string(j)+" Speed",0));
        ini_write_real("Save","Web Entity "+string(j-i+webEntityCounter)+" Direction",ini_read_real("Save","Web Entity "+string(j)+" Direction",0));
    }
    for (i=webEntityCounter;i&lt;j;i++)
    {
        ini_key_delete("Save","Web Entity "+string(i)+" id");
        ini_key_delete("Save","Web Entity "+string(i)+" Index");
        ini_key_delete("Save","Web Entity "+string(i)+" x");
        ini_key_delete("Save","Web Entity "+string(i)+" y");
        ini_key_delete("Save","Web Entity "+string(i)+" Speed");
        ini_key_delete("Save","Web Entity "+string(i)+" Direction");
    }
    ini_close();
    audio_pause_sound(snd_music);
    outlinePosition = 0;
}
else if room == rm_mainMenu
{
    file_delete("temp1.ini");
    draw_text_transformed(room_width/4-40,room_height/8,"Caught in a Web",1,1,0);
    //New Game button
    if outlinePosition == 0
    {   
        if keyboard_check(vk_space) 
        {   
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2-70,1,1,0,c_white,0.7);        
        }
        else if keyboard_check_released(vk_space)
        {
            ini_open("save.ini");
            ini_write_real("Global Save","Load",-1);
            ini_close();
            room_goto(rm_chooseDifficulty);
            ini_open("temp0.ini");
            ini_write_real("Save","Previous Room",rm_mainMenu);
            ini_close();
        }
        else
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2-70,1,1,0,c_white,1);    
        draw_roundrect_color(room_width/2-102,room_height/2-72,
        room_width/2+101,room_height/2-19,c_white,c_red,true); 
    }
    else 
    {
        draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2-70,1,1,0,c_white,1);
    }
    draw_text_transformed_color(room_width/2-70,room_height/2-75,"New Game",0.34,0.34,0,c_white,c_white,c_white,c_white,1);
    //Load button
    if outlinePosition == 1
    {
        if keyboard_check(vk_space) 
        {   
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2,1,1,0,c_white,0.7);
        }
        else if keyboard_check_released(vk_space)
        {            
            room_goto(rm_load);
            ini_open("temp0.ini");
            ini_write_real("Save","Previous Room",rm_mainMenu);
            ini_close();
        }
        else
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2,1,1,0,c_white,1); 
        draw_roundrect_color(room_width/2-102,room_height/2-2,
        room_width/2+101,room_height/2+51,c_white,c_red,true);
    }
    else
    {
        draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2,1,1,0,c_white,1); 
    }
    draw_text_transformed_color(room_width/2-30,room_height/2-5,"Load",0.34,0.34,0,c_white,c_white,c_white,c_white,1); 
    //Options button
    if outlinePosition == 2
    {
    
        if keyboard_check(vk_space)    
        {
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+70,1,1,0,c_white,0.7);
        }
        else if keyboard_check_released(vk_space)
        {            
            room_goto(rm_options);
            ini_open("temp0.ini");
            ini_write_real("Save","Previous Room",rm_mainMenu);
            ini_close();
        }
        else
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+70,1,1,0,c_white,1); 
        draw_roundrect_color(room_width/2-102,room_height/2+68,
        room_width/2+101,room_height/2+121,c_white,c_red,true);
    }
    else
    {
        draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+70,1,1,0,c_white,1);
    }
    draw_text_transformed_color(room_width/2-60,room_height/2+65,"Options",0.34,0.34,0,c_white,c_white,c_white,c_white,1);  
    //Quit button
    if outlinePosition == 3
    {
        if keyboard_check(vk_space)
        {    
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+140,1,1,0,c_white,0.7);       
        }
        else if keyboard_check_released(vk_space)
        {
            file_delete("temp0.ini");
            game_end();
        }
        else
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+140,1,1,0,c_white,1); 
        draw_roundrect_color(room_width/2-102,room_height/2+138,
        room_width/2+101,room_height/2+191,c_white,c_red,true);
    }
    else
    {
        draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+140,1,1,0,c_white,1);
    }
    draw_text_transformed_color(room_width/2-33,room_height/2+135,"Quit",0.34,0.34,0,c_white,c_white,c_white,c_white,1);
}
else if room == rm_chooseDifficulty
{
    draw_text_transformed(room_width/4-40,room_height/8-20,"Choose your difficulty",0.67,0.67,0);
    //Tourist button
    if outlinePosition == 0
    {   
        if keyboard_check(vk_space) 
        {   
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2-140,1,1,0,c_white,0.7);        
        }
        else if keyboard_check_released(vk_space)
        {
            ini_open("temp1.ini");
            ini_write_real("Save","Difficulty",0);
            ini_close();
            room_goto(rm_tutorial);
            ini_open("temp0.ini");
            ini_write_real("Save","Previous Room",rm_chooseDifficulty);
            ini_close();
        }
        else
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2-140,1,1,0,c_white,1);    
        draw_roundrect_color(room_width/2-102,room_height/2-142,
        room_width/2+101,room_height/2-89,c_white,c_red,true); 
    }
    else 
    {
        draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2-140,1,1,0,c_white,1);
    }
    draw_text_transformed_color(room_width/2-60,room_height/2-145,"Tourist",0.34,0.34,0,c_white,c_white,c_white,c_white,1);
    //Easy button
    if outlinePosition == 1
    {   
        if keyboard_check(vk_space) 
        {   
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2-70,1,1,0,c_white,0.7);        
        }
        else if keyboard_check_released(vk_space)
        {
            ini_open("temp1.ini");
            ini_write_real("Save","Difficulty",1);
            ini_close();
            room_goto(rm_tutorial);
            ini_open("temp0.ini");
            ini_write_real("Save","Previous Room",rm_chooseDifficulty);
            ini_close();
        }
        else
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2-70,1,1,0,c_white,1);    
        draw_roundrect_color(room_width/2-102,room_height/2-72,
        room_width/2+101,room_height/2-19,c_white,c_red,true); 
    }
    else 
    {
        draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2-70,1,1,0,c_white,1);
    }
    draw_text_transformed_color(room_width/2-30,room_height/2-75,"Easy",0.34,0.34,0,c_white,c_white,c_white,c_white,1); 
    //Medium button
    if outlinePosition == 2
    {
        if keyboard_check(vk_space) 
        {   
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2,1,1,0,c_white,0.7);
        }
        else if keyboard_check_released(vk_space)
        {
            ini_open("temp1.ini");
            ini_write_real("Save","Difficulty",2);
            ini_close();
            room_goto(rm_tutorial);
            ini_open("temp0.ini");
            ini_write_real("Save","Previous Room",rm_chooseDifficulty);
            ini_close();            
        }
        else
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2,1,1,0,c_white,1); 
        draw_roundrect_color(room_width/2-102,room_height/2-2,
        room_width/2+101,room_height/2+51,c_white,c_red,true);
    }
    else
    {
        draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2,1,1,0,c_white,1); 
    }
    draw_text_transformed_color(room_width/2-52,room_height/2-5,"Medium",0.34,0.34,0,c_white,c_white,c_white,c_white,1);
    //Hard button
    if outlinePosition == 3
    {
    
        if keyboard_check(vk_space)    
        {
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+70,1,1,0,c_white,0.7);
        }
        else if keyboard_check_released(vk_space)
        {
            ini_open("temp1.ini");
            ini_write_real("Save","Difficulty",3);
            ini_close();
            room_goto(rm_tutorial);
            ini_open("temp0.ini");
            ini_write_real("Save","Previous Room",rm_chooseDifficulty);
            ini_close();
        }
        else
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+70,1,1,0,c_white,1); 
        draw_roundrect_color(room_width/2-102,room_height/2+68,
        room_width/2+101,room_height/2+121,c_white,c_red,true);
    }
    else
    {
        draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+70,1,1,0,c_white,1);
    }
    draw_text_transformed_color(room_width/2-33,room_height/2+65,"Hard",0.34,0.34,0,c_white,c_white,c_white,c_white,1); 
    //Not the bees button
    if outlinePosition == 4
    {
        if keyboard_check(vk_space)
        {    
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+140,1,1,0,c_white,0.7);       
        }
        else if keyboard_check_released(vk_space)
        {
            ini_open("temp1.ini");
            ini_write_real("Save","Difficulty",4);
            ini_close();
            room_goto(rm_tutorial);
            ini_open("temp0.ini");
            ini_write_real("Save","Previous Room",rm_chooseDifficulty);
            ini_close();
        }
        else
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+140,1,1,0,c_white,1); 
        draw_roundrect_color(room_width/2-102,room_height/2+138,
        room_width/2+101,room_height/2+191,c_white,c_red,true);
        draw_text_transformed_color(room_width/2-90,room_height/2+140,"Not the bees",0.3,0.3,0,c_red,c_red,c_red,c_red,1); 
    }
    else
    {
        draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+140,1,1,0,c_white,1);
        draw_text_transformed_color(room_width/2-90,room_height/2+140,"Not the bees",0.3,0.3,0,c_white,c_white,c_white,c_white,1); 
    }      
    //Back button
    if outlinePosition == 5
    {
        if keyboard_check(vk_space)
        {    
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+210,1,1,0,c_white,0.7);       
        }
        else if keyboard_check_released(vk_space)
        {
            room_goto(rm_mainMenu);
            ini_open("temp0.ini");
            ini_write_real("Save","Previous Room",rm_chooseDifficulty);
            ini_close();
        }
        else
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+210,1,1,0,c_white,1); 
        draw_roundrect_color(room_width/2-102,room_height/2+208,
        room_width/2+101,room_height/2+261,c_white,c_red,true);
    }
    else
    {
        draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+210,1,1,0,c_white,1);
    }
    draw_text_transformed_color(room_width/2-31,room_height/2+205,"Back",0.34,0.34,0,c_white,c_white,c_white,c_white,1);
}
else if room == rm_tutorial
{
    draw_text_transformed(room_width/4+160,room_height/8-20,"Tutorial",0.67,0.67,0);
    draw_set_font(fnt_impact);
    draw_text_ext_transformed(100,room_height/8+130,    
    "Help the spider survive an onslaught of spider wasps by  moving him across "+
    "the floor, on the walls and across the ceiling with the left and right "+ 
    "arrow keys. It can also move on back walls with the up arrow key, jump with "+ 
    "spacebar, and produce webs with ctrl key while on the back wall. To produce "+
    "a web you need at least half of your web bar, which is located under your "+
    "hearts that indicate how many times you can get hit before dying. Your enemies "+ 
    "are the spider wasps who will damage you if you get too close to them, but "+ 
    "will get entangled in your webs, thus becoming cocoons that you can unstuck "+ 
    "from the back walls, by touching them, and eat them to replenish a third "+ 
    "of your web bar. You can also pause the game at any moment with "+
    "the down key.",100,3100,0.34,0.34,0);
    draw_set_font(fnt_blackWiddow);
    //Back button
    if outlinePosition == 0
    {
        if keyboard_check(vk_space)
        {    
            draw_sprite_ext(spr_button,0,room_width/2-500,room_height/2+260,1,1,0,c_white,0.7);       
        }
        else if keyboard_check_released(vk_space)
        {     
            room_goto(rm_chooseDifficulty);  
            ini_open("temp0.ini");
            ini_write_real("Save","Previous Room",rm_tutorial);
            ini_close();               
        }
        else
            draw_sprite_ext(spr_button,0,room_width/2-500,room_height/2+260,1,1,0,c_white,1); 
        draw_roundrect_color(room_width/2-502,room_height/2+258,
        room_width/2-301,room_height/2+311,c_white,c_red,true);
    }
    else
    {
        draw_sprite_ext(spr_button,0,room_width/2-500,room_height/2+260,1,1,0,c_white,1);
    }
    draw_text_transformed_color(room_width/2-431,room_height/2+255,"Back",0.34,0.34,0,c_white,c_white,c_white,c_white,1);
    //Ok button
    if outlinePosition == 1
    {
        if keyboard_check(vk_space)
        {    
            draw_sprite_ext(spr_button,0,room_width/2+300,room_height/2+260,1,1,0,c_white,0.7);       
        }
        else if keyboard_check_released(vk_space)
        {    
            room_goto(rm_main);
            ini_open("temp0.ini");
            ini_write_real("Save","Previous Room",rm_tutorial);
            ini_close();               
        }
        else
            draw_sprite_ext(spr_button,0,room_width/2+300,room_height/2+260,1,1,0,c_white,1); 
        draw_roundrect_color(room_width/2+302,room_height/2+258,
        room_width/2+501,room_height/2+311,c_white,c_red,true);
    }
    else
    {
        draw_sprite_ext(spr_button,0,room_width/2+300,room_height/2+260,1,1,0,c_white,1);
    }
    draw_text_transformed_color(room_width/2+386,room_height/2+255,"Ok",0.34,0.34,0,c_white,c_white,c_white,c_white,1);
}
else if room == rm_load
{
    draw_text_transformed(room_width/4+255,room_height/8-20,"Load",0.67,0.67,0);
    //Load0 button
    if outlinePosition == 0
    {   
        if keyboard_check(vk_space) 
        {   
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2-140,1,1,0,c_white,0.7);        
        }
        else if keyboard_check_released(vk_space) &amp;&amp; saveMessage0 == "   Save 0"
        {
            ini_open("save.ini");
            ini_write_real("Global Save","Load",0);
            ini_close();
            room_goto(rm_main);
            ini_open("temp0.ini");
            ini_write_real("Save","Previous Room",rm_load);
            ini_close();
        }
        else
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2-140,1,1,0,c_white,1);    
        draw_roundrect_color(room_width/2-102,room_height/2-142,
        room_width/2+101,room_height/2-89,c_white,c_red,true); 
    }
    else 
    {
        draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2-140,1,1,0,c_white,1);
    }
    draw_text_transformed_color(room_width/2-85,room_height/2-145,saveMessage0,0.34,0.34,0,c_white,c_white,c_white,c_white,1);
    //Load1 button
    if outlinePosition == 1
    {   
        if keyboard_check(vk_space) 
        {   
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2-70,1,1,0,c_white,0.7);        
        }
        else if keyboard_check_released(vk_space) &amp;&amp; saveMessage1 == "   Save 1"
        {
            ini_open("save.ini");
            ini_write_real("Global Save","Load",1);
            ini_close();
            room_goto(rm_main);
            ini_open("temp0.ini");
            ini_write_real("Save","Previous Room",rm_load);
            ini_close();
        }
        else
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2-70,1,1,0,c_white,1);    
        draw_roundrect_color(room_width/2-102,room_height/2-72,
        room_width/2+101,room_height/2-19,c_white,c_red,true); 
    }
    else 
    {
        draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2-70,1,1,0,c_white,1);
    }
    draw_text_transformed_color(room_width/2-85,room_height/2-75,saveMessage1,0.34,0.34,0,c_white,c_white,c_white,c_white,1); 
    //Load2 button
    if outlinePosition == 2
    {
        if keyboard_check(vk_space) 
        {   
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2,1,1,0,c_white,0.7);
        }
        else if keyboard_check_released(vk_space) &amp;&amp; saveMessage2 == "   Save 2"
        {
            ini_open("save.ini");
            ini_write_real("Global Save","Load",2);
            ini_close();
            room_goto(rm_main);
            ini_open("temp0.ini");
            ini_write_real("Save","Previous Room",rm_load);
            ini_close();            
        }
        else
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2,1,1,0,c_white,1); 
        draw_roundrect_color(room_width/2-102,room_height/2-2,
        room_width/2+101,room_height/2+51,c_white,c_red,true);
    }
    else
    {
        draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2,1,1,0,c_white,1); 
    }
    draw_text_transformed_color(room_width/2-85,room_height/2-5,saveMessage2,0.34,0.34,0,c_white,c_white,c_white,c_white,1);
    //Load3 button
    if outlinePosition == 3
    {
    
        if keyboard_check(vk_space)    
        {
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+70,1,1,0,c_white,0.7);
        }
        else if keyboard_check_released(vk_space) &amp;&amp; saveMessage3 == "   Save 3"
        {
            ini_open("save.ini");
            ini_write_real("Global Save","Load",3);
            ini_close();
            room_goto(rm_main);
            ini_open("temp0.ini");
            ini_write_real("Save","Previous Room",rm_load);
            ini_close();
        }
        else
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+70,1,1,0,c_white,1); 
        draw_roundrect_color(room_width/2-102,room_height/2+68,
        room_width/2+101,room_height/2+121,c_white,c_red,true);
    }
    else
    {
        draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+70,1,1,0,c_white,1);
    }
    draw_text_transformed_color(room_width/2-85,room_height/2+65,saveMessage3,0.34,0.34,0,c_white,c_white,c_white,c_white,1); 
    //Load4 button
    if outlinePosition == 4
    {
        if keyboard_check(vk_space)
        {    
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+140,1,1,0,c_white,0.7);       
        }
        else if keyboard_check_released(vk_space) &amp;&amp; saveMessage4 == "   Save 4"
        {
            ini_open("save.ini");
            ini_write_real("Global Save","Load",4);
            ini_close();
            room_goto(rm_main);
            ini_open("temp0.ini");
            ini_write_real("Save","Previous Room",rm_load);
            ini_close();
        }
        else
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+140,1,1,0,c_white,1); 
        draw_roundrect_color(room_width/2-102,room_height/2+138,
        room_width/2+101,room_height/2+191,c_white,c_red,true);
    }
    else
    {
        draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+140,1,1,0,c_white,1);
    }
    draw_text_transformed_color(room_width/2-85,room_height/2+135,saveMessage4,0.34,0.34,0,c_white,c_white,c_white,c_white,1);   
    //Back button
    if outlinePosition == 5
    {
        if keyboard_check(vk_space)
        {    
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+210,1,1,0,c_white,0.7);       
        }
        else if keyboard_check_released(vk_space)
        {
            room_goto(rm_mainMenu);
            ini_open("temp0.ini");
            ini_write_real("Save","Previous Room",rm_chooseDifficulty);
            ini_close();
        }
        else
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+210,1,1,0,c_white,1); 
        draw_roundrect_color(room_width/2-102,room_height/2+208,
        room_width/2+101,room_height/2+261,c_white,c_red,true);
    }
    else
    {
        draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+210,1,1,0,c_white,1);
    }
    draw_text_transformed_color(room_width/2-31,room_height/2+205,"Back",0.34,0.34,0,c_white,c_white,c_white,c_white,1);
}
else if room == rm_options
{
    draw_text_transformed(room_width/4+200,room_height/8-20,"Options",0.67,0.67,0);
    //Fullscreen button
    if outlinePosition == 0
    {   
        if keyboard_check(vk_space) 
        {   
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2-140,1,1,0,c_white,0.7);                  
        }
        else if keyboard_check_released(vk_space)
        {
            if !window_get_fullscreen()
                window_set_fullscreen(true);
            else
                window_set_fullscreen(false); 
        }
        else
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2-140,1,1,0,c_white,1);    
        draw_roundrect_color(room_width/2-102,room_height/2-142,
        room_width/2+101,room_height/2-89,c_white,c_red,true); 
    }
    else 
    {
        draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2-140,1,1,0,c_white,1); 
    }
    draw_text_transformed_color(room_width/2-60,room_height/2-145,"Fullscreen",0.34,0.34,0,c_white,c_white,c_white,c_white,1);
    //Volume slider
    if outlinePosition == 1
    {
         
        draw_roundrect_color(room_width/2-162,room_height/2-75,
        room_width/2+161,room_height/2-9,c_white,c_red,true);
        if volume &lt; 1 &amp;&amp; (keyboard_check_pressed(vk_right) || keyboard_check(vk_right))
        {
            volume+=0.01;
            ini_open("save.ini");
            ini_write_real("Global Save","Volume",volume);
            ini_close();
        }
        else if volume &gt; 0.01 &amp;&amp; (keyboard_check_pressed(vk_left) || keyboard_check(vk_left))
        {             
            volume-=0.01;               
            ini_open("save.ini");
            ini_write_real("Global Save","Volume",volume-0.01);
            ini_close();
        }
    } 
    draw_text_transformed_color(room_width/2-160,room_height/2-85,"Volume:",0.34,0.34,0,c_black,c_black,c_black,c_black,1);
    draw_text_transformed_color(room_width/2-120,room_height/2-55,string(floor(real(volume*100))),0.34,0.34,0,c_black,c_black,c_black,c_black,1); 
    draw_sprite_ext(spr_volumeBar,0,room_width/2-40,room_height/2-70,1,1,0,c_white,1);
    draw_sprite_ext(spr_volumeSlider,0,room_width/2-40+167*volume,room_height/2-68,1,1,0,c_white,1);
    //Key section
    draw_text_transformed_color(room_width/2-590,room_height/2-5,"Left key for moving to the left",0.34,0.34,0,c_black,c_black,c_black,c_black,1);
    draw_text_transformed_color(room_width/2+30,room_height/2-5,"Right key for moving to the right",0.34,0.34,0,c_black,c_black,c_black,c_black,1);
    draw_text_transformed_color(room_width/2-590,room_height/2+65,"Up key for climbing the backwall",0.34,0.34,0,c_black,c_black,c_black,c_black,1);
    draw_text_transformed_color(room_width/2+70,room_height/2+65,"Down key for pausing the game",0.34,0.34,0,c_black,c_black,c_black,c_black,1);
    draw_text_transformed_color(room_width/2-525,room_height/2+135,"Spacebar key for jumping",0.34,0.34,0,c_black,c_black,c_black,c_black,1);
    draw_text_transformed_color(room_width/2+110,room_height/2+135,"Ctrl key for laying webs",0.34,0.34,0,c_black,c_black,c_black,c_black,1);
    //Back button
    if outlinePosition == 2
    {
        if keyboard_check(vk_space)
        {    
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+210,1,1,0,c_white,0.7);       
        }
        else if keyboard_check_released(vk_space)
        {    
            ini_open("temp1.ini");
            ini_write_real("Save","Pause State",pauseState);
            ini_close();     
            ini_open("temp0.ini");
            room_goto(ini_read_real("Save","Previous Room",rm_mainMenu));
            ini_write_real("Save","Previous Room",rm_options);
            ini_close();               
        }
        else
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+210,1,1,0,c_white,1); 
        draw_roundrect_color(room_width/2-102,room_height/2+208,
        room_width/2+101,room_height/2+261,c_white,c_red,true);
    }
    else
    {
        draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+210,1,1,0,c_white,1);
    }
    draw_text_transformed_color(room_width/2-31,room_height/2+205,"Back",0.34,0.34,0,c_white,c_white,c_white,c_white,1);
}
else if room == rm_save
{
    draw_text_transformed(room_width/4+255,room_height/8-20,"Save",0.67,0.67,0);
    //Save0 button
    if outlinePosition == 0
    {           
        if keyboard_check(vk_space) 
        {   
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2-140,1,1,0,c_white,0.7);      
        }
        else if keyboard_check_released(vk_space)
        {
            ini_open("temp1.ini");
            var spiderIndex=ini_read_real("Save","Spider Index",0);
            var spiderX=ini_read_real("Save","Spider x",x);
            var spiderY=ini_read_real("Save","Spider y",y);
            var spiderImageSpeed=ini_read_real("Save","Spider Image Speed",10);
            var spiderImageIndex=ini_read_real("Save","Spider Image Index",0);
            var viewX=ini_read_real("Save","View x",x);
            var viewY=ini_read_real("Save","View y",y);
            var spiderWaspID,spiderWaspIndex,spiderWaspX,spiderWaspY,spiderWaspImageSpeed,spiderWaspImageIndex,spiderWaspSpeed,spiderWaspDirection;
            for(var i=0;i&lt;waspCounter;i++)
            {
                spiderWaspID[i]=ini_read_real("Save","Spider Wasp "+string(i)+" id",0); 
                spiderWaspIndex[i]=ini_read_real("Save","Spider Wasp "+string(i)+" Index",0);
                spiderWaspX[i]=ini_read_real("Save","Spider Wasp "+string(i)+" x",x);
                spiderWaspY[i]=ini_read_real("Save","Spider Wasp "+string(i)+" y",y);
                spiderWaspImageSpeed[i]=ini_read_real("Save","Spider Wasp "+string(i)+" Image Speed",1);
                spiderWaspImageIndex[i]=ini_read_real("Save","Spider Wasp "+string(i)+" Image Index",0);
                spiderWaspSpeed[i]=ini_read_real("Save","Spider Wasp "+string(i)+" Speed",7);
                spiderWaspDirection[i]=ini_read_real("Save","Spider Wasp "+string(i)+" Direction",270);       
            }
            var webEntityID,webEntityIndex,webEntityX,webEntityY,webEntityImageSpeed,webEntityDirection;
            for(var i=0;i&lt;webEntityCounter;i++)
            {
                webEntityID[i]=ini_read_real("Save","Web Entity "+string(i)+" id",0); 
                webEntityIndex[i]=ini_read_real("Save","Web Entity "+string(i)+" Index",0);
                webEntityX[i]=ini_read_real("Save","Web Entity "+string(i)+" x",x);
                webEntityY[i]=ini_read_real("Save","Web Entity "+string(i)+" y",y);
                webEntitySpeed[i]=ini_read_real("Save","Web Entity "+string(i)+" Speed",0);
                webEntityDirection[i]=ini_read_real("Save","Web Entity "+string(i)+" Direction",0);       
            }
            ini_close();
            ini_open("save.ini");
            if ini_section_exists("Save0")
                ini_section_delete("Save0");
            ini_write_string("Global Save","Message 0","   Save 0");
            ini_write_real("Save0","Seed",random_get_seed());
            ini_write_real("Save0","Music Moment",musicMoment);
            ini_write_real("Save0","Difficulty",difficulty);
            ini_write_real("Save0","Time",time);
            ini_write_real("Save0","Web Recovery",webRecovery); 
            ini_write_real("Save0","Web Timer",webTimer);
            ini_write_real("Save0","Spider Index",spiderIndex);
            ini_write_real("Save0","Spider x",spiderX);
            ini_write_real("Save0","Spider y",spiderY);
            ini_write_real("Save0","Facingx",facingx);
            ini_write_real("Save0","Facingy",facingy);
            ini_write_real("Save0","Facingz",facingz);
            ini_write_real("Save0","Dir",dir);
            ini_write_real("Save0","Spider Image Speed",spiderImageSpeed);
            ini_write_real("Save0","Spider Image Index",spiderImageIndex);
            ini_write_real("Save0","Landed",landed);
            ini_write_real("Save0","Wasp Counter",waspCounter);
            ini_write_real("Save0","Wasp Limit",waspLimit);
            ini_write_real("Save0","Wasp Switch",waspSwitch);
            ini_write_real("Save0","Avoiding",avoiding);
            ini_write_real("Save0","Hit",hit);
            ini_write_real("Save0","Web Height",webHeight);
            ini_write_real("Save0","Web Entity Counter",webEntityCounter);
            ini_write_real("Save0","Killer",killer);
            ini_write_real("Save0","Scale",scale);  
            ini_write_real("Save0","Lives",lives);
            ini_write_real("Save0","View x",viewX);
            ini_write_real("Save0","View y",viewY);
            for(var i=0;i&lt;waspCounter;i++)
            {
                ini_write_real("Save0","Spider Wasp "+string(i)+" id",spiderWaspID[i]); 
                ini_write_real("Save0","Spider Wasp "+string(i)+" Index",spiderWaspIndex[i]);
                ini_write_real("Save0","Spider Wasp "+string(i)+" x",spiderWaspX[i]);
                ini_write_real("Save0","Spider Wasp "+string(i)+" y",spiderWaspY[i]);
                ini_write_real("Save0","Spider Wasp "+string(i)+" Image Speed",spiderWaspImageSpeed[i]);
                ini_write_real("Save0","Spider Wasp "+string(i)+" Image Index",spiderWaspImageIndex[i]);
                ini_write_real("Save0","Spider Wasp "+string(i)+" Speed",spiderWaspSpeed[i]);
                ini_write_real("Save0","Spider Wasp "+string(i)+" Direction",spiderWaspDirection[i]);       
            } 
            for(var i=0;i&lt;webEntityCounter;i++)
            {
                ini_write_real("Save0","Web Entity "+string(i)+" id",webEntityID[i]); 
                ini_write_real("Save0","Web Entity "+string(i)+" Index",webEntityIndex[i]);
                ini_write_real("Save0","Web Entity "+string(i)+" x",webEntityX[i]);
                ini_write_real("Save0","Web Entity "+string(i)+" y",webEntityY[i]);
                ini_write_real("Save0","Web Entity "+string(i)+" Speed",webEntitySpeed[i]);
                ini_write_real("Save0","Web Entity "+string(i)+" Direction",webEntityDirection[i]);       
            }
            ini_close();
        }
        else
        {
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2-140,1,1,0,c_white,1);
        }   
        draw_roundrect_color(room_width/2-102,room_height/2-142,
        room_width/2+101,room_height/2-89,c_white,c_red,true); 
    }
    else 
    {
        draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2-140,1,1,0,c_white,1);
    }
    draw_text_transformed_color(room_width/2-85,room_height/2-145,saveMessage0,0.34,0.34,0,c_white,c_white,c_white,c_white,1);
    //Save1 button
    if outlinePosition == 1
    {   
        if keyboard_check(vk_space) 
        {   
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2-70,1,1,0,c_white,0.7);        
        }
        else if keyboard_check_released(vk_space)
        {            
            ini_open("temp1.ini");
            var spiderIndex=ini_read_real("Save","Spider Index",0);
            var spiderX=ini_read_real("Save","Spider x",x);
            var spiderY=ini_read_real("Save","Spider y",y);
            var spiderImageSpeed=ini_read_real("Save","Spider Image Speed",10);
            var spiderImageIndex=ini_read_real("Save","Spider Image Index",0);
            var viewX=ini_read_real("Save","View x",x);
            var viewY=ini_read_real("Save","View y",y);
            var spiderWaspID,spiderWaspIndex,spiderWaspX,spiderWaspY,spiderWaspImageSpeed,spiderWaspImageIndex,spiderWaspSpeed,spiderWaspDirection;
            for(var i=0;i&lt;waspCounter;i++)
            {
                spiderWaspID[i]=ini_read_real("Save","Spider Wasp "+string(i)+" id",0); 
                spiderWaspIndex[i]=ini_read_real("Save","Spider Wasp "+string(i)+" Index",0);
                spiderWaspX[i]=ini_read_real("Save","Spider Wasp "+string(i)+" x",x);
                spiderWaspY[i]=ini_read_real("Save","Spider Wasp "+string(i)+" y",y);
                spiderWaspImageSpeed[i]=ini_read_real("Save","Spider Wasp "+string(i)+" Image Speed",1);
                spiderWaspImageIndex[i]=ini_read_real("Save","Spider Wasp "+string(i)+" Image Index",0);
                spiderWaspSpeed[i]=ini_read_real("Save","Spider Wasp "+string(i)+" Speed",7);
                spiderWaspDirection[i]=ini_read_real("Save","Spider Wasp "+string(i)+" Direction",270);       
            }
            var webEntityID,webEntityIndex,webEntityX,webEntityY,webEntityImageSpeed,webEntityDirection;
            for(var i=0;i&lt;webEntityCounter;i++)
            {
                webEntityID[i]=ini_read_real("Save","Web Entity "+string(i)+" id",0); 
                webEntityIndex[i]=ini_read_real("Save","Web Entity "+string(i)+" Index",0);
                webEntityX[i]=ini_read_real("Save","Web Entity "+string(i)+" x",x);
                webEntityY[i]=ini_read_real("Save","Web Entity "+string(i)+" y",y);
                webEntitySpeed[i]=ini_read_real("Save","Web Entity "+string(i)+" Speed",0);
                webEntityDirection[i]=ini_read_real("Save","Web Entity "+string(i)+" Direction",0);       
            }
            ini_close();
            ini_open("save.ini");
            if ini_section_exists("Save1")
                ini_section_delete("Save1");
            ini_write_string("Global Save","Message 1","   Save 1");            
            ini_write_real("Save1","Seed",random_get_seed());
            ini_write_real("Save1","Music Moment",musicMoment);
            ini_write_real("Save1","Difficulty",difficulty);
            ini_write_real("Save1","Time",time);
            ini_write_real("Save1","Web Recovery",webRecovery); 
            ini_write_real("Save1","Web Timer",webTimer);
            ini_write_real("Save1","Spider Index",spiderIndex);
            ini_write_real("Save1","Spider x",spiderX);
            ini_write_real("Save1","Spider y",spiderY);
            ini_write_real("Save1","Facingx",facingx);
            ini_write_real("Save1","Facingy",facingy);
            ini_write_real("Save1","Facingz",facingz);
            ini_write_real("Save1","Dir",dir);
            ini_write_real("Save1","Spider Image Speed",spiderImageSpeed);
            ini_write_real("Save1","Spider Image Index",spiderImageIndex);
            ini_write_real("Save1","Landed",landed);
            ini_write_real("Save1","Wasp Counter",waspCounter);
            ini_write_real("Save1","Wasp Limit",waspLimit);
            ini_write_real("Save1","Wasp Switch",waspSwitch);
            ini_write_real("Save1","Avoiding",avoiding);
            ini_write_real("Save1","Hit",hit);
            ini_write_real("Save1","Web Height",webHeight);
            ini_write_real("Save1","Web Entity Counter",webEntityCounter);
            ini_write_real("Save1","Killer",killer);
            ini_write_real("Save1","Scale",scale);  
            ini_write_real("Save1","Lives",lives);
            ini_write_real("Save1","View x",viewX);
            ini_write_real("Save1","View y",viewY);
            for(var i=0;i&lt;waspCounter;i++)
            {
                ini_write_real("Save1","Spider Wasp "+string(i)+" id",spiderWaspID[i]); 
                ini_write_real("Save1","Spider Wasp "+string(i)+" Index",spiderWaspIndex[i]);
                ini_write_real("Save1","Spider Wasp "+string(i)+" x",spiderWaspX[i]);
                ini_write_real("Save1","Spider Wasp "+string(i)+" y",spiderWaspY[i]);
                ini_write_real("Save1","Spider Wasp "+string(i)+" Image Speed",spiderWaspImageSpeed[i]);
                ini_write_real("Save1","Spider Wasp "+string(i)+" Image Index",spiderWaspImageIndex[i]);
                ini_write_real("Save1","Spider Wasp "+string(i)+" Speed",spiderWaspSpeed[i]);
                ini_write_real("Save1","Spider Wasp "+string(i)+" Direction",spiderWaspDirection[i]);       
            } 
            for(var i=0;i&lt;webEntityCounter;i++)
            {
                ini_write_real("Save1","Web Entity "+string(i)+" id",webEntityID[i]); 
                ini_write_real("Save1","Web Entity "+string(i)+" Index",webEntityIndex[i]);
                ini_write_real("Save1","Web Entity "+string(i)+" x",webEntityX[i]);
                ini_write_real("Save1","Web Entity "+string(i)+" y",webEntityY[i]);
                ini_write_real("Save1","Web Entity "+string(i)+" Speed",webEntitySpeed[i]);
                ini_write_real("Save1","Web Entity "+string(i)+" Direction",webEntityDirection[i]);       
            }
            ini_close();
        }
        else
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2-70,1,1,0,c_white,1);    
        draw_roundrect_color(room_width/2-102,room_height/2-72,
        room_width/2+101,room_height/2-19,c_white,c_red,true); 
    }
    else 
    {
        draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2-70,1,1,0,c_white,1);
    }
    draw_text_transformed_color(room_width/2-85,room_height/2-75,saveMessage1,0.34,0.34,0,c_white,c_white,c_white,c_white,1); 
    //Save2 button
    if outlinePosition == 2
    {
        if keyboard_check(vk_space) 
        {   
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2,1,1,0,c_white,0.7);
        }
        else if keyboard_check_released(vk_space)
        {
            ini_open("temp1.ini");
            var spiderIndex=ini_read_real("Save","Spider Index",0);
            var spiderX=ini_read_real("Save","Spider x",x);
            var spiderY=ini_read_real("Save","Spider y",y);
            var spiderImageSpeed=ini_read_real("Save","Spider Image Speed",10);
            var spiderImageIndex=ini_read_real("Save","Spider Image Index",0);
            var viewX=ini_read_real("Save","View x",x);
            var viewY=ini_read_real("Save","View y",y);
            var spiderWaspID,spiderWaspIndex,spiderWaspX,spiderWaspY,spiderWaspImageSpeed,spiderWaspImageIndex,spiderWaspSpeed,spiderWaspDirection;
            for(var i=0;i&lt;waspCounter;i++)
            {
                spiderWaspID[i]=ini_read_real("Save","Spider Wasp "+string(i)+" id",0); 
                spiderWaspIndex[i]=ini_read_real("Save","Spider Wasp "+string(i)+" Index",0);
                spiderWaspX[i]=ini_read_real("Save","Spider Wasp "+string(i)+" x",x);
                spiderWaspY[i]=ini_read_real("Save","Spider Wasp "+string(i)+" y",y);
                spiderWaspImageSpeed[i]=ini_read_real("Save","Spider Wasp "+string(i)+" Image Speed",1);
                spiderWaspImageIndex[i]=ini_read_real("Save","Spider Wasp "+string(i)+" Image Index",0);
                spiderWaspSpeed[i]=ini_read_real("Save","Spider Wasp "+string(i)+" Speed",7);
                spiderWaspDirection[i]=ini_read_real("Save","Spider Wasp "+string(i)+" Direction",270);       
            }
            var webEntityID,webEntityIndex,webEntityX,webEntityY,webEntityImageSpeed,webEntityDirection;
            for(var i=0;i&lt;webEntityCounter;i++)
            {
                webEntityID[i]=ini_read_real("Save","Web Entity "+string(i)+" id",0); 
                webEntityIndex[i]=ini_read_real("Save","Web Entity "+string(i)+" Index",0);
                webEntityX[i]=ini_read_real("Save","Web Entity "+string(i)+" x",x);
                webEntityY[i]=ini_read_real("Save","Web Entity "+string(i)+" y",y);
                webEntitySpeed[i]=ini_read_real("Save","Web Entity "+string(i)+" Speed",0);
                webEntityDirection[i]=ini_read_real("Save","Web Entity "+string(i)+" Direction",0);       
            }
            ini_close();
            ini_open("save.ini");
            if ini_section_exists("Save2")
                ini_section_delete("Save2");
            ini_write_string("Global Save","Message 2","   Save 2");
            ini_write_real("Save2","Seed",random_get_seed());
            ini_write_real("Save2","Music Moment",musicMoment);
            ini_write_real("Save2","Difficulty",difficulty);
            ini_write_real("Save2","Time",time);
            ini_write_real("Save2","Web Recovery",webRecovery); 
            ini_write_real("Save2","Web Timer",webTimer);
            ini_write_real("Save2","Spider Index",spiderIndex);
            ini_write_real("Save2","Spider x",spiderX);
            ini_write_real("Save2","Spider y",spiderY);
            ini_write_real("Save2","Facingx",facingx);
            ini_write_real("Save2","Facingy",facingy);
            ini_write_real("Save2","Facingz",facingz);
            ini_write_real("Save2","Dir",dir);
            ini_write_real("Save2","Spider Image Speed",spiderImageSpeed);
            ini_write_real("Save2","Spider Image Index",spiderImageIndex);
            ini_write_real("Save2","Landed",landed);
            ini_write_real("Save2","Wasp Counter",waspCounter);
            ini_write_real("Save2","Wasp Limit",waspLimit);
            ini_write_real("Save2","Wasp Switch",waspSwitch);
            ini_write_real("Save2","Avoiding",avoiding);
            ini_write_real("Save2","Hit",hit);
            ini_write_real("Save2","Web Height",webHeight);
            ini_write_real("Save2","Web Entity Counter",webEntityCounter);
            ini_write_real("Save2","Killer",killer);
            ini_write_real("Save2","Scale",scale);  
            ini_write_real("Save2","Lives",lives);
            ini_write_real("Save2","View x",viewX);
            ini_write_real("Save2","View y",viewY);
            for(var i=0;i&lt;waspCounter;i++)
            {
                ini_write_real("Save2","Spider Wasp "+string(i)+" id",spiderWaspID[i]); 
                ini_write_real("Save2","Spider Wasp "+string(i)+" Index",spiderWaspIndex[i]);
                ini_write_real("Save2","Spider Wasp "+string(i)+" x",spiderWaspX[i]);
                ini_write_real("Save2","Spider Wasp "+string(i)+" y",spiderWaspY[i]);
                ini_write_real("Save2","Spider Wasp "+string(i)+" Image Speed",spiderWaspImageSpeed[i]);
                ini_write_real("Save2","Spider Wasp "+string(i)+" Image Index",spiderWaspImageIndex[i]);
                ini_write_real("Save2","Spider Wasp "+string(i)+" Speed",spiderWaspSpeed[i]);
                ini_write_real("Save2","Spider Wasp "+string(i)+" Direction",spiderWaspDirection[i]);       
            } 
            for(var i=0;i&lt;webEntityCounter;i++)
            {
                ini_write_real("Save2","Web Entity "+string(i)+" id",webEntityID[i]); 
                ini_write_real("Save2","Web Entity "+string(i)+" Index",webEntityIndex[i]);
                ini_write_real("Save2","Web Entity "+string(i)+" x",webEntityX[i]);
                ini_write_real("Save2","Web Entity "+string(i)+" y",webEntityY[i]);
                ini_write_real("Save2","Web Entity "+string(i)+" Speed",webEntitySpeed[i]);
                ini_write_real("Save2","Web Entity "+string(i)+" Direction",webEntityDirection[i]);       
            }
            ini_close();           
        }
        else
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2,1,1,0,c_white,1); 
        draw_roundrect_color(room_width/2-102,room_height/2-2,
        room_width/2+101,room_height/2+51,c_white,c_red,true);
    }
    else
    {
        draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2,1,1,0,c_white,1); 
    }
    draw_text_transformed_color(room_width/2-85,room_height/2-5,saveMessage2,0.34,0.34,0,c_white,c_white,c_white,c_white,1);
    //Save3 button
    if outlinePosition == 3
    {
    
        if keyboard_check(vk_space)    
        {
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+70,1,1,0,c_white,0.7);
        }
        else if keyboard_check_released(vk_space)
        {
            ini_open("temp1.ini");
            var spiderIndex=ini_read_real("Save","Spider Index",0);
            var spiderX=ini_read_real("Save","Spider x",x);
            var spiderY=ini_read_real("Save","Spider y",y);
            var spiderImageSpeed=ini_read_real("Save","Spider Image Speed",10);
            var spiderImageIndex=ini_read_real("Save","Spider Image Index",0);
            var viewX=ini_read_real("Save","View x",x);
            var viewY=ini_read_real("Save","View y",y);
            var spiderWaspID,spiderWaspIndex,spiderWaspX,spiderWaspY,spiderWaspImageSpeed,spiderWaspImageIndex,spiderWaspSpeed,spiderWaspDirection;
            for(var i=0;i&lt;waspCounter;i++)
            {
                spiderWaspID[i]=ini_read_real("Save","Spider Wasp "+string(i)+" id",0); 
                spiderWaspIndex[i]=ini_read_real("Save","Spider Wasp "+string(i)+" Index",0);
                spiderWaspX[i]=ini_read_real("Save","Spider Wasp "+string(i)+" x",x);
                spiderWaspY[i]=ini_read_real("Save","Spider Wasp "+string(i)+" y",y);
                spiderWaspImageSpeed[i]=ini_read_real("Save","Spider Wasp "+string(i)+" Image Speed",1);
                spiderWaspImageIndex[i]=ini_read_real("Save","Spider Wasp "+string(i)+" Image Index",0);
                spiderWaspSpeed[i]=ini_read_real("Save","Spider Wasp "+string(i)+" Speed",7);
                spiderWaspDirection[i]=ini_read_real("Save","Spider Wasp "+string(i)+" Direction",270);       
            }
            var webEntityID,webEntityIndex,webEntityX,webEntityY,webEntityImageSpeed,webEntityDirection;
            for(var i=0;i&lt;webEntityCounter;i++)
            {
                webEntityID[i]=ini_read_real("Save","Web Entity "+string(i)+" id",0); 
                webEntityIndex[i]=ini_read_real("Save","Web Entity "+string(i)+" Index",0);
                webEntityX[i]=ini_read_real("Save","Web Entity "+string(i)+" x",x);
                webEntityY[i]=ini_read_real("Save","Web Entity "+string(i)+" y",y);
                webEntitySpeed[i]=ini_read_real("Save","Web Entity "+string(i)+" Speed",0);
                webEntityDirection[i]=ini_read_real("Save","Web Entity "+string(i)+" Direction",0);       
            }
            ini_close();
            ini_open("save.ini");
            if ini_section_exists("Save3")
                ini_section_delete("Save3");
            ini_write_string("Global Save","Message 3","   Save 3");
            ini_write_real("Save3","Seed",random_get_seed());
            ini_write_real("Save3","Music Moment",musicMoment);
            ini_write_real("Save3","Difficulty",difficulty);
            ini_write_real("Save3","Time",time);
            ini_write_real("Save3","Web Recovery",webRecovery); 
            ini_write_real("Save3","Web Timer",webTimer);
            ini_write_real("Save3","Spider Index",spiderIndex);
            ini_write_real("Save3","Spider x",spiderX);
            ini_write_real("Save3","Spider y",spiderY);
            ini_write_real("Save3","Facingx",facingx);
            ini_write_real("Save3","Facingy",facingy);
            ini_write_real("Save3","Facingz",facingz);
            ini_write_real("Save3","Dir",dir);
            ini_write_real("Save3","Spider Image Speed",spiderImageSpeed);
            ini_write_real("Save3","Spider Image Index",spiderImageIndex);
            ini_write_real("Save3","Landed",landed);
            ini_write_real("Save3","Wasp Counter",waspCounter);
            ini_write_real("Save3","Wasp Limit",waspLimit);
            ini_write_real("Save3","Wasp Switch",waspSwitch);
            ini_write_real("Save3","Avoiding",avoiding);
            ini_write_real("Save3","Hit",hit);
            ini_write_real("Save3","Web Height",webHeight);
            ini_write_real("Save3","Web Entity Counter",webEntityCounter);
            ini_write_real("Save3","Killer",killer);
            ini_write_real("Save3","Scale",scale);  
            ini_write_real("Save3","Lives",lives);
            ini_write_real("Save3","View x",viewX);
            ini_write_real("Save3","View y",viewY);
            for(var i=0;i&lt;waspCounter;i++)
            {
                ini_write_real("Save3","Spider Wasp "+string(i)+" id",spiderWaspID[i]); 
                ini_write_real("Save3","Spider Wasp "+string(i)+" Index",spiderWaspIndex[i]);
                ini_write_real("Save3","Spider Wasp "+string(i)+" x",spiderWaspX[i]);
                ini_write_real("Save3","Spider Wasp "+string(i)+" y",spiderWaspY[i]);
                ini_write_real("Save3","Spider Wasp "+string(i)+" Image Speed",spiderWaspImageSpeed[i]);
                ini_write_real("Save3","Spider Wasp "+string(i)+" Image Index",spiderWaspImageIndex[i]);
                ini_write_real("Save3","Spider Wasp "+string(i)+" Speed",spiderWaspSpeed[i]);
                ini_write_real("Save3","Spider Wasp "+string(i)+" Direction",spiderWaspDirection[i]);       
            } 
            for(var i=0;i&lt;webEntityCounter;i++)
            {
                ini_write_real("Save3","Web Entity "+string(i)+" id",webEntityID[i]); 
                ini_write_real("Save3","Web Entity "+string(i)+" Index",webEntityIndex[i]);
                ini_write_real("Save3","Web Entity "+string(i)+" x",webEntityX[i]);
                ini_write_real("Save3","Web Entity "+string(i)+" y",webEntityY[i]);
                ini_write_real("Save3","Web Entity "+string(i)+" Speed",webEntitySpeed[i]);
                ini_write_real("Save3","Web Entity "+string(i)+" Direction",webEntityDirection[i]);       
            }
            ini_close();
        }
        else
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+70,1,1,0,c_white,1); 
        draw_roundrect_color(room_width/2-102,room_height/2+68,
        room_width/2+101,room_height/2+121,c_white,c_red,true);
    }
    else
    {
        draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+70,1,1,0,c_white,1);
    }
    draw_text_transformed_color(room_width/2-85,room_height/2+65,saveMessage3,0.34,0.34,0,c_white,c_white,c_white,c_white,1); 
    //Save4 button
    if outlinePosition == 4
    {
        if keyboard_check(vk_space)
        {    
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+140,1,1,0,c_white,0.7);       
        }
        else if keyboard_check_released(vk_space)
        {
            ini_open("temp1.ini");
            var spiderIndex=ini_read_real("Save","Spider Index",0);
            var spiderX=ini_read_real("Save","Spider x",x);
            var spiderY=ini_read_real("Save","Spider y",y);
            var spiderImageSpeed=ini_read_real("Save","Spider Image Speed",10);
            var spiderImageIndex=ini_read_real("Save","Spider Image Index",0);
            var viewX=ini_read_real("Save","View x",x);
            var viewY=ini_read_real("Save","View y",y);
            var spiderWaspID,spiderWaspIndex,spiderWaspX,spiderWaspY,spiderWaspImageSpeed,spiderWaspImageIndex,spiderWaspSpeed,spiderWaspDirection;
            for(var i=0;i&lt;waspCounter;i++)
            {
                spiderWaspID[i]=ini_read_real("Save","Spider Wasp "+string(i)+" id",0); 
                spiderWaspIndex[i]=ini_read_real("Save","Spider Wasp "+string(i)+" Index",0);
                spiderWaspX[i]=ini_read_real("Save","Spider Wasp "+string(i)+" x",x);
                spiderWaspY[i]=ini_read_real("Save","Spider Wasp "+string(i)+" y",y);
                spiderWaspImageSpeed[i]=ini_read_real("Save","Spider Wasp "+string(i)+" Image Speed",1);
                spiderWaspImageIndex[i]=ini_read_real("Save","Spider Wasp "+string(i)+" Image Index",0);
                spiderWaspSpeed[i]=ini_read_real("Save","Spider Wasp "+string(i)+" Speed",7);
                spiderWaspDirection[i]=ini_read_real("Save","Spider Wasp "+string(i)+" Direction",270);       
            }
            var webEntityID,webEntityIndex,webEntityX,webEntityY,webEntityImageSpeed,webEntityDirection;
            for(var i=0;i&lt;webEntityCounter;i++)
            {
                webEntityID[i]=ini_read_real("Save","Web Entity "+string(i)+" id",0); 
                webEntityIndex[i]=ini_read_real("Save","Web Entity "+string(i)+" Index",0);
                webEntityX[i]=ini_read_real("Save","Web Entity "+string(i)+" x",x);
                webEntityY[i]=ini_read_real("Save","Web Entity "+string(i)+" y",y);
                webEntitySpeed[i]=ini_read_real("Save","Web Entity "+string(i)+" Speed",0);
                webEntityDirection[i]=ini_read_real("Save","Web Entity "+string(i)+" Direction",0);       
            }
            ini_close();
            ini_open("save.ini");
            if ini_section_exists("Save4")
                ini_section_delete("Save4");
            ini_write_string("Global Save","Message 4","   Save 4");
            ini_write_real("Save4","Seed",random_get_seed());
            ini_write_real("Save4","Music Moment",musicMoment);
            ini_write_real("Save4","Difficulty",difficulty);
            ini_write_real("Save4","Time",time);
            ini_write_real("Save4","Web Recovery",webRecovery); 
            ini_write_real("Save4","Web Timer",webTimer);
            ini_write_real("Save4","Spider Index",spiderIndex);
            ini_write_real("Save4","Spider x",spiderX);
            ini_write_real("Save4","Spider y",spiderY);
            ini_write_real("Save4","Facingx",facingx);
            ini_write_real("Save4","Facingy",facingy);
            ini_write_real("Save4","Facingz",facingz);
            ini_write_real("Save4","Dir",dir);
            ini_write_real("Save4","Spider Image Speed",spiderImageSpeed);
            ini_write_real("Save4","Spider Image Index",spiderImageIndex);
            ini_write_real("Save4","Landed",landed);
            ini_write_real("Save4","Wasp Counter",waspCounter);
            ini_write_real("Save4","Wasp Limit",waspLimit);
            ini_write_real("Save4","Wasp Switch",waspSwitch);
            ini_write_real("Save4","Avoiding",avoiding);
            ini_write_real("Save4","Hit",hit);
            ini_write_real("Save4","Web Height",webHeight);
            ini_write_real("Save4","Web Entity Counter",webEntityCounter);
            ini_write_real("Save4","Killer",killer);
            ini_write_real("Save4","Scale",scale);  
            ini_write_real("Save4","Lives",lives);
            ini_write_real("Save4","View x",viewX);
            ini_write_real("Save4","View y",viewY);
            for(var i=0;i&lt;waspCounter;i++)
            {
                ini_write_real("Save4","Spider Wasp "+string(i)+" id",spiderWaspID[i]); 
                ini_write_real("Save4","Spider Wasp "+string(i)+" Index",spiderWaspIndex[i]);
                ini_write_real("Save4","Spider Wasp "+string(i)+" x",spiderWaspX[i]);
                ini_write_real("Save4","Spider Wasp "+string(i)+" y",spiderWaspY[i]);
                ini_write_real("Save4","Spider Wasp "+string(i)+" Image Speed",spiderWaspImageSpeed[i]);
                ini_write_real("Save4","Spider Wasp "+string(i)+" Image Index",spiderWaspImageIndex[i]);
                ini_write_real("Save4","Spider Wasp "+string(i)+" Speed",spiderWaspSpeed[i]);
                ini_write_real("Save4","Spider Wasp "+string(i)+" Direction",spiderWaspDirection[i]);       
            } 
            for(var i=0;i&lt;webEntityCounter;i++)
            {
                ini_write_real("Save4","Web Entity "+string(i)+" id",webEntityID[i]); 
                ini_write_real("Save4","Web Entity "+string(i)+" Index",webEntityIndex[i]);
                ini_write_real("Save4","Web Entity "+string(i)+" x",webEntityX[i]);
                ini_write_real("Save4","Web Entity "+string(i)+" y",webEntityY[i]);
                ini_write_real("Save4","Web Entity "+string(i)+" Speed",webEntitySpeed[i]);
                ini_write_real("Save4","Web Entity "+string(i)+" Direction",webEntityDirection[i]);       
            }
            ini_close();
        }
        else
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+140,1,1,0,c_white,1); 
        draw_roundrect_color(room_width/2-102,room_height/2+138,
        room_width/2+101,room_height/2+191,c_white,c_red,true);
    }
    else
    {
        draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+140,1,1,0,c_white,1);
    }
    draw_text_transformed_color(room_width/2-85,room_height/2+135,saveMessage4,0.34,0.34,0,c_white,c_white,c_white,c_white,1);   
    //Back button
    if outlinePosition == 5
    {
        if keyboard_check(vk_space)
        {    
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+210,1,1,0,c_white,0.7);       
        }
        else if keyboard_check_released(vk_space)
        {
            room_goto(rm_main);
            ini_open("temp1.ini");
            ini_write_real("Save","Pause State",pauseState);            
            ini_close();
            ini_open("temp0.ini");
            ini_write_real("Save","Previous Room",rm_save);
            ini_close();
        }
        else
            draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+210,1,1,0,c_white,1); 
        draw_roundrect_color(room_width/2-102,room_height/2+208,
        room_width/2+101,room_height/2+261,c_white,c_red,true);
    }
    else
    {
        draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+210,1,1,0,c_white,1);
    }
    draw_text_transformed_color(room_width/2-31,room_height/2+205,"Back",0.34,0.34,0,c_white,c_white,c_white,c_white,1);
}
else if room == rm_scoreBoard
{
    ini_open("save.ini");    
    draw_text_transformed(room_width/4-90,room_height/8,"You survived "+string(round(time*0.033333))+" seconds",0.8,0.8,0);
    draw_text_transformed(room_width/2-161,room_height/8+150,"Your last attempts",0.35,0.35,0);
    draw_text_transformed(room_width/2-61,room_height/8+220,ini_read_string("Global Save","Score0"," "),0.25,0.25,0);
    draw_text_transformed(room_width/2-61,room_height/8+270,ini_read_string("Global Save","Score1"," "),0.25,0.25,0);
    draw_text_transformed(room_width/2-61,room_height/8+320,ini_read_string("Global Save","Score2"," "),0.25,0.25,0);
    draw_text_transformed(room_width/2-61,room_height/8+370,ini_read_string("Global Save","Score3"," "),0.25,0.25,0);
    draw_text_transformed(room_width/2-61,room_height/8+420,ini_read_string("Global Save","Score4"," "),0.25,0.25,0); 
    ini_close();
    //Back button
    if keyboard_check(vk_space)
    {    
        draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+210,1,1,0,c_white,0.7);       
    }
    else if keyboard_check_released(vk_space)
    {
        room_goto(rm_mainMenu);
        ini_open("temp1.ini");
        ini_write_real("Save","Pause State",pauseState);            
        ini_close();
        ini_open("temp0.ini");
        ini_write_real("Save","Previous Room",rm_scoreBoard);
        ini_close();
        ini_open("save.ini");
        ini_write_string("Global Save","Score4",ini_read_string("Global Save","Score3"," "));
        ini_write_string("Global Save","Score3",ini_read_string("Global Save","Score2"," "));
        ini_write_string("Global Save","Score2",ini_read_string("Global Save","Score1"," "));
        ini_write_string("Global Save","Score1",ini_read_string("Global Save","Score0"," "));
        ini_write_string("Global Save","Score0",string(round(time*0.033333))+" seconds");
        ini_close();
    }
    else
        draw_sprite_ext(spr_button,0,room_width/2-100,room_height/2+210,1,1,0,c_white,1); 
    draw_roundrect_color(room_width/2-102,room_height/2+208,
    room_width/2+101,room_height/2+261,c_white,c_red,true);
    draw_text_transformed_color(room_width/2-31,room_height/2+205,"Back",0.34,0.34,0,c_white,c_white,c_white,c_white,1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
